// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  fullName String
  email    String @unique
  password String

  address String? // optional
  bio     String? // optional
  role    Role    @default(RECIPIENT)

  location   Location? @relation(fields: [locationId], references: [id], onDelete: Cascade)
  locationId String?

  // required for donor, optional for recipient
  bloodGroup  String?
  phoneNumber String?

  // for donors only
  birthIdUrl String?
  birthDate  DateTime?

  image String?

  donations Donation[] @relation("UserDonations")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Location {
  id        String   @id @default(uuid())
  latitude  Float
  longitude Float
  address   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users User[]
}

model Donation {
  id           String   @id @default(uuid())
  userId       String
  user         User     @relation("UserDonations", fields: [userId], references: [id], onDelete: Cascade)
  donationTime DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([userId])
}

enum Role {
  ADMIN
  DONOR
  RECIPIENT
}
